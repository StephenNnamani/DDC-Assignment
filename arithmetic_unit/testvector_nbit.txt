S1 S0 C_in A3 A2 A1 A0 B3 B2 B1 B0 G3 G2 G1 G0 C_out
#-conf---- ----A------ -----B----- ----G------ -carry_over-
# A,B and G are right to left to easily see them as numbers

# A transfer (1)
0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0
0 0 0 1 1 1 1 0 0 0 0 1 1 1 1 0
0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 0
0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0

#increment
0 0 1 1 0 1 0 0 0 0 0 1 0 1 1 0
0 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1
0 0 1 0 0 1 1 0 0 0 0 0 1 0 0 0
0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 1

#add
0 1 0 1 0 1 0 0 1 0 1 1 1 1 1 0 # 10 + 5 = 15
0 1 0 1 0 1 0 0 0 1 1 1 1 0 1 0 # 10 + 3 = 13
0 1 0 0 1 1 0 0 1 1 0 1 1 0 0 0 # 6 + 6 = 12
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 # 0...
0 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 # 15 + 15 = 14 + carry over

# add +1 (all tests from add)
0 1 1 1 0 1 0 0 1 0 1 0 0 0 0 1 # 10 + 5 +1 = 0 + carry over
0 1 1 1 0 1 0 0 0 1 1 1 1 1 0 0 # 10 + 3 +1 = 14
0 1 1 0 1 1 0 0 1 1 0 1 1 0 1 0 # 6 + 6 +1 = 13
0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 # 0 +1 = 1
0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 # 15 + 15 +1 = 15 + carry over

# subtract (A + -B + 1)
# (positive numbers: always carry over active)
# (negative numbers in 1-komplement layout without carry over)
1 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 # 10 - 5 = 5
1 0 1 1 0 1 0 0 0 1 1 0 1 1 1 1 # 10 - 3 = 7
1 0 1 0 1 1 0 0 1 1 0 0 0 0 0 1 # 6 - 6 = 0
1 0 1 1 1 1 1 1 1 1 1 0 0 0 0 1 # 15 - 15 = 0
1 0 1 0 0 0 0 0 0 0 1 1 1 1 1 0 # -1
1 0 1 0 1 0 1 1 0 1 0 1 0 1 1 0 # 5 - 10 = -5
1 0 1 0 1 1 1 1 1 1 1 1 0 0 0 0 # 7 - 15 = -8

# A + -B (subtraction -1 )
1 0 0 1 0 1 0 0 1 0 1 0 1 0 0 1 # 10 - 5 = 5-1 = 4
1 0 0 1 0 1 0 0 0 1 1 0 1 1 0 1 # 10 - 3 = 7-1 = 6
1 0 0 0 1 1 0 0 1 1 0 1 1 1 1 0 # 6 - 6 = 0-1 = -1
1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 # 15 - 15 = 0-1 = -1
1 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 # -1-1 = -2
1 0 0 0 1 0 1 1 0 1 0 1 0 1 0 0 # 5 - 10 = -5-1 = -6
1 0 0 0 1 1 1 1 1 1 1 0 1 1 1 0 # 7 - 15 = -8-1 = -9

# decrement
# carry over: 1 => positive number; 0=> negative number
1 1 0 1 0 1 0 0 0 0 0 1 0 0 1 1
1 1 0 1 1 1 1 0 0 0 0 1 1 1 0 1
1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 0
1 1 0 0 1 1 0 0 0 0 0 0 1 0 1 1
1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 

#transfer (2)
# carry over: 1 => positive number
1 1 1 1 0 1 0 0 0 0 0 1 0 1 0 1
1 1 1 1 1 1 1 0 0 0 0 1 1 1 1 1
1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1